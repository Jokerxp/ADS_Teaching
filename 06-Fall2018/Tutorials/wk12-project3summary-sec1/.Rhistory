+ labs(title="Baseline Model CV Error (%)", x="Team", y="Error Rate")
+ scale_colour_brewer(palette = "Dark2", guide = FALSE)
+ scale_fill_brewer(palette = "Pastel2", labels=type_names, guide = guide_legend(title = "Type"))
+ geom_vline(xintercept = seq(1.5, 13.5, 1), linetype = "longdash", colour="lightgrey"))
# data saved in Results.R
err_claimed <- c(
24.505,
24.685,
24.135,
24.882,
21.83,
25.8,
21.692,
26
)
err_adv_claimed <- rep(err_claimed, each=20)
CV_error_baseline <- c(
24.194,
24.32268,
24.1005,
24.7164,
26.7778,
24.79964,
24.12674,
NA
)
err_retrained <- rep(CV_error_baseline, each=20)
# load("label_eval.RData")
# load("pred_untuned.RData")
# ind_fun <- which(is.na(label_eval))
err_untuned <- c(
24.176,
24.3665,
23.8935,
12.9186,
20.3185,
23.7492,
23.8449,
23.1762
)
err_adv_untuned <- rep(err_untuned  , each=20)
type_names <- c("claimed", "untuned", "re-trained")
# team_names <- paste0("Team ", 1:12)
team_names <- 1:8
# load("output_proj3.RData")
err_adv_all <- data.frame(Team=rep(rep(team_names, each=20), times=3),
Type=rep(type_names, each=160),
Error= c(err_adv_claimed, err_adv_untuned, err_retrained)) #as.vector(t(output$err_adv_retrained))))
err_adv_all$Type <- factor(err_adv_all$Type, levels= type_names)
err_adv_all$Team <- factor(err_adv_all$Team, levels= team_names)
#err_adv_all$Error <- err_adv_all$Error
type_names <- c("claimed", "untuned", "re-trained")
team_names <- paste0("Team ", 1:10)
library(ggplot2)
(ggplot(err_adv_all, aes(y = Error, x = Team, fill = Type, colour = Type))
+ geom_boxplot(width=0.5,outlier.colour = NULL)
#+ scale_alpha_continuous(guide=FALSE, range=c(0.01,0.99))
+theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA),
axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12, face="bold"),
legend.position="bottom",
strip.text.y = element_text(size = 13, face="bold"),
panel.background = element_blank())
+ labs(title="Baseline Model CV Error (%)", x="Team", y="Error Rate")
+ scale_colour_brewer(palette = "Dark2", guide = FALSE)
+ scale_fill_brewer(palette = "Pastel2", labels=type_names, guide = guide_legend(title = "Type"))
+ geom_vline(xintercept = seq(1.5, 13.5, 1), linetype = "longdash", colour="lightgrey"))
# data saved in Results.R
err_claimed <- c(
25.893,
25.968,
25.523,
24.213,
24.62,
25.8,
NA,
24
)
err_adv_claimed <- rep(err_claimed, each=20)
CV_error_baseline <- c(
25.539,
26.1961,
25.686,
28.2682,
26.575,
25.8015,
26.8847,
36.327)
err_retrained <- rep(CV_error_baseline, each=20)
# load("label_eval.RData")
# load("pred_untuned.RData")
# ind_fun <- which(is.na(label_eval))
err_untuned <- c(
25.619,
25.625,
25.193,
23.428,
25.585,
22.850,
22.529,
23.272
)
err_adv_untuned <- rep(err_untuned  , each=20)
type_names <- c("claimed", "untuned", "re-trained")
# team_names <- paste0("Team ", 1:12)
team_names <- 1:8
# load("output_proj3.RData")
err_adv_all <- data.frame(Team=rep(rep(team_names, each=20), times=3),
Type=rep(type_names, each=160),
Error= c(err_adv_claimed, err_adv_untuned, err_retrained)) #as.vector(t(output$err_adv_retrained))))
err_adv_all$Type <- factor(err_adv_all$Type, levels= type_names)
err_adv_all$Team <- factor(err_adv_all$Team, levels= team_names)
err_adv_all$Error <- err_adv_all$Error
type_names <- c("claimed", "untuned", "re-trained")
team_names <- paste0("Team ", 1:8)
library(ggplot2)
(ggplot(err_adv_all, aes(y = Error, x = Team, fill = Type, colour = Type))
+ geom_boxplot(width=0.5,outlier.colour = NULL)
#+ scale_alpha_continuous(guide=FALSE, range=c(0.01,0.99))
+theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA),
axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12, face="bold"),
legend.position="bottom",
strip.text.y = element_text(size = 13, face="bold"),
panel.background = element_blank())
+ labs(title="Advanced Model CV Error (%)", x="Team", y="Error Rate")
+ scale_colour_brewer(palette = "Dark2", guide = FALSE)
+ scale_fill_brewer(palette = "Pastel2", labels=type_names, guide = guide_legend(title = "Type"))
+ geom_vline(xintercept = seq(1.5, 13.5, 1), linetype = "longdash", colour="lightgrey"))
# data saved in Results.R
err_claimed <- c(
25.893,
25.968,
25.523,
24.213,
24.62,
25.8,
23.499,
24
)
err_adv_claimed <- rep(err_claimed, each=20)
CV_error_baseline <- c(
25.539,
26.1961,
25.686,
28.2682,
26.575,
25.8015,
26.8847,
36.327)
err_retrained <- rep(CV_error_baseline, each=20)
# load("label_eval.RData")
# load("pred_untuned.RData")
# ind_fun <- which(is.na(label_eval))
err_untuned <- c(
25.619,
25.625,
25.193,
23.428,
25.585,
22.850,
22.529,
23.272
)
err_adv_untuned <- rep(err_untuned  , each=20)
type_names <- c("claimed", "untuned", "re-trained")
# team_names <- paste0("Team ", 1:12)
team_names <- 1:8
# load("output_proj3.RData")
err_adv_all <- data.frame(Team=rep(rep(team_names, each=20), times=3),
Type=rep(type_names, each=160),
Error= c(err_adv_claimed, err_adv_untuned, err_retrained)) #as.vector(t(output$err_adv_retrained))))
err_adv_all$Type <- factor(err_adv_all$Type, levels= type_names)
err_adv_all$Team <- factor(err_adv_all$Team, levels= team_names)
err_adv_all$Error <- err_adv_all$Error
type_names <- c("claimed", "untuned", "re-trained")
team_names <- paste0("Team ", 1:8)
library(ggplot2)
(ggplot(err_adv_all, aes(y = Error, x = Team, fill = Type, colour = Type))
+ geom_boxplot(width=0.5,outlier.colour = NULL)
#+ scale_alpha_continuous(guide=FALSE, range=c(0.01,0.99))
+theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA),
axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12, face="bold"),
legend.position="bottom",
strip.text.y = element_text(size = 13, face="bold"),
panel.background = element_blank())
+ labs(title="Advanced Model CV Error (%)", x="Team", y="Error Rate")
+ scale_colour_brewer(palette = "Dark2", guide = FALSE)
+ scale_fill_brewer(palette = "Pastel2", labels=type_names, guide = guide_legend(title = "Type"))
+ geom_vline(xintercept = seq(1.5, 13.5, 1), linetype = "longdash", colour="lightgrey"))
# data saved in Results.R
err_claimed <- c(
25.893,
25.968,
25.523,
24.213,
24.62,
25.8,
23.499,
24.63
)
err_adv_claimed <- rep(err_claimed, each=20)
CV_error_baseline <- c(
25.539,
26.1961,
25.686,
28.2682,
26.575,
25.8015,
26.8847,
36.327)
err_retrained <- rep(CV_error_baseline, each=20)
# load("label_eval.RData")
# load("pred_untuned.RData")
# ind_fun <- which(is.na(label_eval))
err_untuned <- c(
25.619,
25.625,
25.193,
23.428,
25.585,
22.850,
22.529,
23.272
)
err_adv_untuned <- rep(err_untuned  , each=20)
type_names <- c("claimed", "untuned", "re-trained")
# team_names <- paste0("Team ", 1:12)
team_names <- 1:8
# load("output_proj3.RData")
err_adv_all <- data.frame(Team=rep(rep(team_names, each=20), times=3),
Type=rep(type_names, each=160),
Error= c(err_adv_claimed, err_adv_untuned, err_retrained)) #as.vector(t(output$err_adv_retrained))))
err_adv_all$Type <- factor(err_adv_all$Type, levels= type_names)
err_adv_all$Team <- factor(err_adv_all$Team, levels= team_names)
err_adv_all$Error <- err_adv_all$Error
type_names <- c("claimed", "untuned", "re-trained")
team_names <- paste0("Team ", 1:8)
library(ggplot2)
(ggplot(err_adv_all, aes(y = Error, x = Team, fill = Type, colour = Type))
+ geom_boxplot(width=0.5,outlier.colour = NULL)
#+ scale_alpha_continuous(guide=FALSE, range=c(0.01,0.99))
+theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA),
axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12, face="bold"),
legend.position="bottom",
strip.text.y = element_text(size = 13, face="bold"),
panel.background = element_blank())
+ labs(title="Advanced Model CV Error (%)", x="Team", y="Error Rate")
+ scale_colour_brewer(palette = "Dark2", guide = FALSE)
+ scale_fill_brewer(palette = "Pastel2", labels=type_names, guide = guide_legend(title = "Type"))
+ geom_vline(xintercept = seq(1.5, 13.5, 1), linetype = "longdash", colour="lightgrey"))
# data saved in Results.R
err_claimed <- c(
25.893,
25.968,
25.523,
24.213,
24.62,
25.8,
23.499,
24.63
)
err_adv_claimed <- rep(err_claimed, each=20)
CV_error_baseline <- c(
25.539,
26.1961,
25.686,
28.2682,
26.575,
25.8015,
26.8847,
36.327)
err_retrained <- rep(CV_error_baseline, each=20)
# load("label_eval.RData")
# load("pred_untuned.RData")
# ind_fun <- which(is.na(label_eval))
err_untuned <- c(
25.619,
25.625,
25.193,
23.428,
25.585,
22.850,
22.529,
23.272
)
err_adv_untuned <- rep(err_untuned  , each=20)
type_names <- c("claimed", "untuned", "re-trained")
# team_names <- paste0("Team ", 1:12)
team_names <- 1:8
# load("output_proj3.RData")
err_adv_all <- data.frame(Team=rep(rep(team_names, each=20), times=3),
Type=rep(type_names, each=160),
Error= c(err_adv_claimed, err_adv_untuned, err_retrained)) #as.vector(t(output$err_adv_retrained))))
err_adv_all$Type <- factor(err_adv_all$Type, levels= type_names)
err_adv_all$Team <- factor(err_adv_all$Team, levels= team_names)
err_adv_all$Error <- err_adv_all$Error
type_names <- c("claimed", "untuned", "re-trained")
team_names <- paste0("Team ", 1:8)
library(ggplot2)
(ggplot(err_adv_all, aes(y = Error, x = Team, fill = Type, colour = Type))
+ geom_boxplot(width=0.5,outlier.colour = NULL)
#+ scale_alpha_continuous(guide=FALSE, range=c(0.01,0.99))
+theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA),
axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12, face="bold"),
legend.position="bottom",
strip.text.y = element_text(size = 13, face="bold"),
panel.background = element_blank())
+ labs(title="Advanced Model CV Error (%)", x="Team", y="Error Rate")
+ scale_colour_brewer(palette = "Dark2", guide = FALSE)
+ scale_fill_brewer(palette = "Pastel2", labels=type_names, guide = guide_legend(title = "Type"))
+ geom_vline(xintercept = seq(1.5, 13.5, 1), linetype = "longdash", colour="lightgrey"))
# data saved in Results.R
err_claimed <- c(
24.505,
24.685,
24.135,
24.882,
21.83,
25.8,
21.692,
26
)
err_adv_claimed <- rep(err_claimed, each=20)
CV_error_baseline <- c(
24.194,
24.32268,
24.1005,
24.7164,
26.7778,
24.79964,
24.12674,
NA
)
err_retrained <- rep(CV_error_baseline, each=20)
# load("label_eval.RData")
# load("pred_untuned.RData")
# ind_fun <- which(is.na(label_eval))
err_untuned <- c(
24.176,
24.3665,
23.8935,
12.9186,
20.3185,
23.7492,
23.8449,
23.1762
)
err_adv_untuned <- rep(err_untuned  , each=20)
type_names <- c("claimed", "untuned", "re-trained")
# team_names <- paste0("Team ", 1:12)
team_names <- 1:8
# load("output_proj3.RData")
err_adv_all <- data.frame(Team=rep(rep(team_names, each=20), times=3),
Type=rep(type_names, each=160),
Error= c(err_adv_claimed, err_adv_untuned, err_retrained)) #as.vector(t(output$err_adv_retrained))))
err_adv_all$Type <- factor(err_adv_all$Type, levels= type_names)
err_adv_all$Team <- factor(err_adv_all$Team, levels= team_names)
#err_adv_all$Error <- err_adv_all$Error
type_names <- c("claimed", "untuned", "re-trained")
team_names <- paste0("Team ", 1:10)
library(ggplot2)
(ggplot(err_adv_all, aes(y = Error, x = Team, fill = Type, colour = Type))
+ geom_boxplot(width=0.5,outlier.colour = NULL)
#+ scale_alpha_continuous(guide=FALSE, range=c(0.01,0.99))
+theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA),
axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12, face="bold"),
legend.position="bottom",
strip.text.y = element_text(size = 13, face="bold"),
panel.background = element_blank())
+ labs(title="Baseline Model PSNR", x="Team", y="PSNR")
+ scale_colour_brewer(palette = "Dark2", guide = FALSE)
+ scale_fill_brewer(palette = "Pastel2", labels=type_names, guide = guide_legend(title = "Type"))
+ geom_vline(xintercept = seq(1.5, 13.5, 1), linetype = "longdash", colour="lightgrey"))
# data saved in Results.R
err_claimed <- c(
25.893,
25.968,
25.523,
24.213,
24.62,
25.8,
23.499,
24.63
)
err_adv_claimed <- rep(err_claimed, each=20)
CV_error_baseline <- c(
25.539,
26.1961,
25.686,
28.2682,
26.575,
25.8015,
26.8847,
36.327)
err_retrained <- rep(CV_error_baseline, each=20)
# load("label_eval.RData")
# load("pred_untuned.RData")
# ind_fun <- which(is.na(label_eval))
err_untuned <- c(
25.619,
25.625,
25.193,
23.428,
25.585,
22.850,
22.529,
23.272
)
err_adv_untuned <- rep(err_untuned  , each=20)
type_names <- c("claimed", "untuned", "re-trained")
# team_names <- paste0("Team ", 1:12)
team_names <- 1:8
# load("output_proj3.RData")
err_adv_all <- data.frame(Team=rep(rep(team_names, each=20), times=3),
Type=rep(type_names, each=160),
Error= c(err_adv_claimed, err_adv_untuned, err_retrained)) #as.vector(t(output$err_adv_retrained))))
err_adv_all$Type <- factor(err_adv_all$Type, levels= type_names)
err_adv_all$Team <- factor(err_adv_all$Team, levels= team_names)
err_adv_all$Error <- err_adv_all$Error
type_names <- c("claimed", "untuned", "re-trained")
team_names <- paste0("Team ", 1:8)
library(ggplot2)
(ggplot(err_adv_all, aes(y = Error, x = Team, fill = Type, colour = Type))
+ geom_boxplot(width=0.5,outlier.colour = NULL)
#+ scale_alpha_continuous(guide=FALSE, range=c(0.01,0.99))
+theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA),
axis.text=element_text(size=12),
axis.title=element_text(size=12),
legend.text=element_text(size=12),
legend.title=element_text(size=12, face="bold"),
legend.position="bottom",
strip.text.y = element_text(size = 13, face="bold"),
panel.background = element_blank())
+ labs(title="Advanced Model PSNR", x="Team", y="PSNR")
+ scale_colour_brewer(palette = "Dark2", guide = FALSE)
+ scale_fill_brewer(palette = "Pastel2", labels=type_names, guide = guide_legend(title = "Type"))
+ geom_vline(xintercept = seq(1.5, 13.5, 1), linetype = "longdash", colour="lightgrey"))
-10 * log10(0.015)
-10 * log10(0.15^2)
-10 * log10(0.015^2)
-10 * log10(0.002)
0.015 ^ 2
sample(8)
library(png)
img <- readPNG("HR.jpg")
library(png)
library(grid)
library(gridExtra)
img1 <-  rasterGrob(as.raster(readPNG("HR.jpg")), interpolate = FALSE)
library(png)
library(grid)
library(gridExtra)
img1 <-  rasterGrob(as.raster(readPNG("5.png")), interpolate = FALSE)
img2 <-  rasterGrob(as.raster(readPNG("6.png")), interpolate = FALSE)
grid.arrange(img1, img2, ncol = 2)
?grid.arrange
library(png)
library(grid)
library(gridExtra)
img1 <-  rasterGrob(as.raster(readPNG("5.png")), interpolate = FALSE)
img2 <-  rasterGrob(as.raster(readPNG("6.png")), interpolate = FALSE)
grid.arrange(img1, img2, ncol = 2, widths=2)
library(png)
library(grid)
library(gridExtra)
img1 <-  rasterGrob(as.raster(readPNG("5.png")), interpolate = FALSE)
img2 <-  rasterGrob(as.raster(readPNG("6.png")), interpolate = FALSE)
grid.arrange(img1, img2, ncol = 2, widths=3)
library(png)
library(grid)
library(gridExtra)
img1 <-  rasterGrob(as.raster(readPNG("5.png")), interpolate = FALSE)
img2 <-  rasterGrob(as.raster(readPNG("6.png")), interpolate = FALSE)
grid.arrange(img1, img2, ncol = 2, widths= c(2, 2))
